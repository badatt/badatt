{"version":3,"sources":["webpack:///./src/components/ui/TitleSection/styles.ts","webpack:///./src/components/ui/TitleSection/index.tsx","webpack:///./src/components/utils/FormatHtml/index.tsx","webpack:///./src/templates/BlogPost/styles.ts","webpack:///./src/templates/BlogPost/index.tsx"],"names":["TitleSection","styled","div","Title","h2","center","SubTitle","h4","Separator","title","subtitle","FormatHtml","className","content","dangerouslySetInnerHTML","__html","Links","h3","figure","BlogPost","data","pageContext","post","markdownRemark","previous","next","Layout","SEO","frontmatter","Container","section","date","html","to","fields","slug","rel"],"mappings":"iIAOaA,EAAeC,IAAOC,IAAV,uEAAGD,CAAH,SACnB,sDAGOE,EAAQF,IAAOG,GAAV,gEAAGH,CAAH,aACZ,oHACF,qBAAGI,QAAyB,wBAGnBC,EAAWL,IAAOM,GAAV,mEAAGN,CAAH,aACf,oEACF,qBAAGI,QAAyB,wBAGnBG,EAAYP,IAAOG,GAAV,oEAAGH,CAAH,8DAChB,8FACF,qBAAGI,QAAyB,yCAIxB,mFAKA,kGCdOL,IARuB,SAAC,GAAD,IAAGK,EAAH,EAAGA,OAAQI,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,SAAlB,OACpC,kBAAC,EAAD,KACGA,GAAY,kBAAC,EAAD,CAAiBL,OAAQA,GAASI,GAC/C,kBAAC,EAAD,CAAcJ,OAAQA,GAASK,GAC/B,kBAAC,EAAD,CAAkBL,OAAQA,O,oCCd9B,yBAgBeM,IATqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAYC,EAAf,EAAeA,QAAf,OAClC,0BACED,UAAcA,EAAL,eACTE,wBAAyB,CACvBC,OAAQF,O,+JCADG,GARQf,IAAOgB,GAAV,gEAAGhB,CAAH,SACZ,wCAGeA,IAAOiB,OAAV,gEAAGjB,CAAH,SACZ,+FAGeA,IAAOC,IAAV,gEAAGD,CAAH,SACZ,kFCqDSkB,UA/BmB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnCC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKlB,MAAOa,EAAKM,YAAYnB,QAC7B,kBAACoB,EAAA,EAAD,CAAWC,SAAO,GAChB,kBAAC9B,EAAA,EAAD,CAAcS,MAAOa,EAAKM,YAAYG,KAAMrB,SAAUY,EAAKM,YAAYnB,QACvE,kBAACE,EAAA,EAAD,CAAYE,QAASS,EAAKU,OAC1B,kBAAC,EAAD,KACE,8BACGR,GACC,kBAAC,IAAD,CAAMS,GAAIT,EAASU,OAAOC,KAAMC,IAAI,YAApC,KACKZ,EAASI,YAAYnB,QAI9B,8BACGgB,GACC,kBAAC,IAAD,CAAMQ,GAAIR,EAAKS,OAAOC,KAAMC,IAAI,QAC7BX,EAAKG,YAAYnB,MADpB","file":"component---src-templates-blog-post-index-tsx-e1b250fba44fee070264.js","sourcesContent":["import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport interface StyledProps {\r\n  center?: boolean;\r\n}\r\n\r\nexport const TitleSection = styled.div`\r\n  ${tw`flex flex-col w-full`};\r\n`;\r\n\r\nexport const Title = styled.h2<StyledProps>`\r\n  ${tw`uppercase mb-4 text-lg font-bold w-full text-left`};\r\n  ${({ center }) => center && tw`text-center`};\r\n`;\r\n\r\nexport const SubTitle = styled.h4<StyledProps>`\r\n  ${tw`text-xs text-indigo-600 w-full text-left`};\r\n  ${({ center }) => center && tw`text-center`};\r\n`;\r\n\r\nexport const Separator = styled.h2<StyledProps>`\r\n  ${tw`relative w-2 h-8 mb-6 -mt-2`};\r\n  ${({ center }) => center && tw`mx-auto`};\r\n\r\n  &:before {\r\n    content: '';\r\n    ${tw`bg-indigo-500 h-full w-px absolute left-0`};\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    ${tw`bg-teal-400 h-6 w-px absolute ml-1`};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as Styled from './styles';\r\nimport { StyledProps } from './styles';\r\n\r\ninterface Props extends StyledProps {\r\n  title: string;\r\n  subtitle?: string;\r\n}\r\n\r\nconst TitleSection: React.FC<Props> = ({ center, title, subtitle }) => (\r\n  <Styled.TitleSection>\r\n    {subtitle && <Styled.SubTitle center={center}>{title}</Styled.SubTitle>}\r\n    <Styled.Title center={center}>{subtitle}</Styled.Title>\r\n    <Styled.Separator center={center} />\r\n  </Styled.TitleSection>\r\n);\r\n\r\nexport default TitleSection;\r\n","import React, { ReactNode } from 'react';\r\n\r\ninterface Props {\r\n  content: any;\r\n  className: string;\r\n}\r\n\r\nconst FormatHtml: React.FC<Props> = ({ className , content }) => (\r\n  <span\r\n    className={`${className} format-html`}\r\n    dangerouslySetInnerHTML={{\r\n      __html: content\r\n    }}\r\n  />\r\n);\r\n\r\nexport default FormatHtml;\r\n","import styled from 'styled-components';\r\nimport tw from 'tailwind.macro';\r\n\r\nexport const Title = styled.h3`\r\n  ${tw`font-semibold mb-4`};\r\n`;\r\n\r\nexport const Image = styled.figure`\r\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\r\n`;\r\n\r\nexport const Links = styled.div`\r\n  ${tw`w-full flex justify-between mt-10`};\r\n`;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Link from 'gatsby-link';\r\n\r\nimport Layout from 'components/Layout';\r\nimport SEO from 'components/SEO';\r\nimport Container from 'components/ui/Container';\r\nimport TitleSection from 'components/ui/TitleSection';\r\nimport FormatHtml from 'components/utils/FormatHtml';\r\n\r\nimport * as Styled from './styles';\r\n\r\ninterface Post {\r\n  html: React.ReactNode;\r\n  fields: {\r\n    slug: string;\r\n  };\r\n  frontmatter: {\r\n    title: string;\r\n    date: string;\r\n  };\r\n}\r\n\r\ninterface Props {\r\n  data: {\r\n    markdownRemark: Post;\r\n  };\r\n  pageContext: {\r\n    slug: string;\r\n    next: Post;\r\n    previous: Post;\r\n  };\r\n}\r\n\r\nconst BlogPost: React.FC<Props> = ({ data, pageContext }) => {\r\n  const post = data.markdownRemark;\r\n  const { previous, next } = pageContext;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={post.frontmatter.title} />\r\n      <Container section>\r\n        <TitleSection title={post.frontmatter.date} subtitle={post.frontmatter.title} />\r\n        <FormatHtml content={post.html} />\r\n        <Styled.Links>\r\n          <span>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"previous\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </span>\r\n          <span>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </span>\r\n        </Styled.Links>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n\r\nexport const query = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMM DD, YYYY\")\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}